apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: orc
    app.kubernetes.io/instance: cluster
    app.kubernetes.io/managed-by: percona-server-operator
    app.kubernetes.io/name: percona-server
    app.kubernetes.io/part-of: percona-server
  name: cluster-orc
  namespace: orc-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: orc
      app.kubernetes.io/instance: cluster
      app.kubernetes.io/managed-by: percona-server-operator
      app.kubernetes.io/name: percona-server
      app.kubernetes.io/part-of: percona-server
  serviceName: cluster-orc
  template:
    metadata:
      annotations:
        percona.com/last-applied-tls: tls-hash
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: orc
        app.kubernetes.io/instance: cluster
        app.kubernetes.io/managed-by: percona-server-operator
        app.kubernetes.io/name: percona-server
        app.kubernetes.io/part-of: percona-server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: orc
                app.kubernetes.io/instance: cluster
                app.kubernetes.io/managed-by: percona-server-operator
                app.kubernetes.io/name: percona-server
                app.kubernetes.io/part-of: percona-server
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - /usr/local/orchestrator/orchestrator
        - -config
        - /etc/orchestrator/config/orchestrator.conf.json
        - http
        command:
        - /opt/percona/orc-entrypoint.sh
        env:
        - name: ORC_SERVICE
          value: cluster-orc
        - name: MYSQL_SERVICE
          value: cluster-mysql
        - name: RAFT_ENABLED
          value: "true"
        - name: CLUSTER_NAME
          value: cluster
        image: perconalab/percona-server-mysql-operator:main-orchestrator
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/lb-check
            port: web
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: orc
        ports:
        - containerPort: 3000
          name: web
        - containerPort: 10008
          name: raft
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: web
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            memory: 256M
          requests:
            memory: 128M
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/percona
          name: bin
        - mountPath: /etc/orchestrator/ssl
          name: tls
        - mountPath: /etc/orchestrator/custom
          name: custom
        - mountPath: /etc/orchestrator/config
          name: config
        - mountPath: /etc/orchestrator/orchestrator-users-secret/orchestrator
          name: users
          subPath: orchestrator
      - args:
        - /opt/percona/peer-list
        - -on-change=/usr/bin/add_mysql_nodes.sh
        - -service=$(MYSQL_SERVICE)
        command:
        - /opt/percona/orc-entrypoint.sh
        env:
        - name: ORC_SERVICE
          value: cluster-mysql
        - name: MYSQL_SERVICE
          value: cluster-mysql
        image: perconalab/percona-server-mysql-operator:main-orchestrator
        imagePullPolicy: Always
        name: mysql-monit
        resources:
          limits:
            memory: 256M
          requests:
            memory: 128M
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/percona
          name: bin
        - mountPath: /etc/orchestrator/ssl
          name: tls
        - mountPath: /etc/orchestrator/custom
          name: custom
        - mountPath: /etc/orchestrator/config
          name: config
        - mountPath: /etc/orchestrator/orchestrator-users-secret/orchestrator
          name: users
          subPath: orchestrator
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /opt/percona-server-mysql-operator/ps-init-entrypoint.sh
        image: config-hash
        imagePullPolicy: Always
        name: orc-init
        resources:
          limits:
            memory: 256M
          requests:
            memory: 128M
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/percona
          name: bin
      restartPolicy: Always
      runtimeClassName: runtime-class-name
      volumes:
      - emptyDir: {}
        name: bin
      - emptyDir: {}
        name: config
      - name: users
        secret:
          secretName: internal-cluster
      - name: tls
        secret:
          secretName: cluster1-ssl
      - configMap:
          name: cluster-orc
        name: custom
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
status:
  availableReplicas: 0
  replicas: 0
