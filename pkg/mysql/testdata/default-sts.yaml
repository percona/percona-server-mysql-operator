apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: mysql
    app.kubernetes.io/instance: cluster
    app.kubernetes.io/managed-by: percona-server-operator
    app.kubernetes.io/name: percona-server
    app.kubernetes.io/part-of: percona-server
  name: cluster-mysql
  namespace: orc-ns
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: mysql
      app.kubernetes.io/instance: cluster
      app.kubernetes.io/managed-by: percona-server-operator
      app.kubernetes.io/name: percona-server
      app.kubernetes.io/part-of: percona-server
  serviceName: cluster-mysql
  template:
    metadata:
      annotations:
        percona.com/configuration-hash: config-hash
        percona.com/last-applied-tls: tls-hash
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: mysql
        app.kubernetes.io/instance: cluster
        app.kubernetes.io/managed-by: percona-server-operator
        app.kubernetes.io/name: percona-server
        app.kubernetes.io/part-of: percona-server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/component: mysql
                app.kubernetes.io/instance: cluster
                app.kubernetes.io/managed-by: percona-server-operator
                app.kubernetes.io/name: percona-server
                app.kubernetes.io/part-of: percona-server
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - mysqld
        command:
        - /opt/percona/ps-entrypoint.sh
        env:
        - name: MONITOR_HOST
          value: '%'
        - name: SERVICE_NAME
          value: cluster-mysql
        - name: SERVICE_NAME_UNREADY
          value: cluster-mysql-unready
        - name: CLUSTER_HASH
          value: "2166136"
        - name: INNODB_CLUSTER_NAME
          value: cluster
        - name: CR_UID
        - name: CLUSTER_TYPE
          value: group-replication
        - name: MYSQL_NOTIFY_SOCKET
          value: /var/lib/mysql/notify.sock
        - name: MYSQL_STATE_FILE
          value: /var/lib/mysql/mysql.state
        image: perconalab/percona-server-mysql-operator:main-psmysql
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
              - /opt/percona/ps-pre-stop.sh
        livenessProbe:
          exec:
            command:
            - /opt/percona/healthcheck
            - liveness
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql
        - containerPort: 33062
          name: mysql-admin
        - containerPort: 33060
          name: mysqlx
        - containerPort: 33061
          name: mysql-gr
        readinessProbe:
          exec:
            command:
            - /opt/percona/healthcheck
            - readiness
        resources:
          limits:
            memory: 2G
          requests:
            memory: 1G
        startupProbe:
          exec:
            command:
            - /opt/percona/bootstrap
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/percona
          name: bin
        - mountPath: /var/lib/mysql
          name: datadir
        - mountPath: /.mysqlsh
          name: mysqlsh
        - mountPath: /etc/mysql/mysql-users-secret
          name: users
        - mountPath: /etc/mysql/mysql-tls-secret
          name: tls
        - mountPath: /etc/mysql/config
          name: config
      - command:
        - /opt/percona/sidecar
        image: perconalab/percona-server-mysql-operator:main-backup
        imagePullPolicy: Always
        name: xtrabackup
        ports:
        - containerPort: 6450
          name: http
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/percona
          name: bin
        - mountPath: /var/lib/mysql
          name: datadir
        - mountPath: /etc/mysql/mysql-users-secret
          name: users
        - mountPath: /var/log/xtrabackup
          name: backup-logs
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /opt/percona-server-mysql-operator/ps-init-entrypoint.sh
        image: init-image
        imagePullPolicy: Always
        name: mysql-init
        resources:
          limits:
            memory: 2G
          requests:
            memory: 1G
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/percona
          name: bin
      restartPolicy: Always
      volumes:
      - emptyDir: {}
        name: bin
      - emptyDir: {}
        name: mysqlsh
      - name: users
        secret:
          secretName: internal-cluster
      - name: tls
        secret:
          secretName: cluster1-ssl
      - name: config
        projected:
          sources:
          - configMap:
              items:
              - key: my.cnf
                path: my-config.cnf
              name: cluster-mysql
              optional: true
          - configMap:
              items:
              - key: my.cnf
                path: auto-config.cnf
              name: auto-cluster-mysql
              optional: true
          - secret:
              items:
              - key: my.cnf
                path: my-secret.cnf
              name: cluster-mysql
              optional: true
      - emptyDir: {}
        name: backup-logs
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: datadir
    spec:
      resources:
        requests:
          storage: 2G
    status: {}
status:
  availableReplicas: 0
  replicas: 0
