apiVersion: ps.percona.com/v1alpha1
kind: PerconaServerMySQL
metadata:
  name: cluster1
spec:
  allowUnsafeConfigurations: false
  secretsName: cluster1-secrets
  sslSecretName: cluster1-ssl
  mysql:
    clusterType: async
    size: 3
    image: percona/percona-server:8.0.28
    resources:
      requests:
        memory: 1G
        cpu: 600m
        ephemeral-storage: 1G
      limits:
        memory: 1G
        #cpu: "1"
        #ephemeral-storage: 1G
    affinity:
      antiAffinityTopologyKey: "none"
#      advanced:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: kubernetes.io/e2e-az-name
#                operator: In
#                values:
#                - e2e-az1
#                - e2e-az2
#    tolerations:
#    - key: "node.alpha.kubernetes.io/unreachable"
#      operator: "Exists"
#      effect: "NoExecute"
#      tolerationSeconds: 6000
#    podDisruptionBudget:
#      maxUnavailable: 1
#      minAvailable: 0
    volumeSpec:
#      emptyDir: {}
#      hostPath:
#        path: /data
#        type: Directory
      persistentVolumeClaim:
#        storageClassName: standard
#        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 6G
 #   gracePeriod: 600

  router:
    image: perconalab/percona-server-mysql-operator:main-router
    imagePullPolicy: Always

    size: 3

    resources:
      requests:
        memory: 256M
      limits:
        memory: 256M
    affinity:
      antiAffinityTopologyKey: "none"

  orchestrator:
    image: perconalab/percona-server-mysql-operator:main-orchestrator
    imagePullPolicy: Always
    size: 3
    resources:
      requests:
        memory: 128M
      limits:
        memory: 256M

    volumeSpec:
      persistentVolumeClaim:
        resources:
          requests:
            storage: 1G
    affinity:
      antiAffinityTopologyKey: "none"
    
  pmm:
    enabled: false
    image: percona/pmm-client:2.12.0
    serverHost: monitoring-service
    serverUser: admin
#    pxcParams: "--disable-tablestats-limit=2000"
#    proxysqlParams: "--custom-labels=CUSTOM-LABELS"
#    resources:
#      requests:
#        memory: 200M
#        cpu: 500m


  backup:
    enabled: true
    image: perconalab/percona-server-mysql-operator:main-backup
    imagePullPolicy: Always
    storages:
      s3-us-west:
        type: s3
        verifyTLS: true
#        nodeSelector:
#          storage: tape
#          backupWorker: 'True'
#        resources:
#          requests:
#            memory: 1G
#            cpu: 600m
#        affinity:
#          nodeAffinity:
#            requiredDuringSchedulingIgnoredDuringExecution:
#              nodeSelectorTerms:
#              - matchExpressions:
#                - key: backupWorker
#                  operator: In
#                  values:
#                  - 'True'
#        tolerations:
#          - key: "backupWorker"
#            operator: "Equal"
#            value: "True"
#            effect: "NoSchedule"
#        annotations:
#          testName: scheduled-backup
#        labels:
#          backupWorker: 'True'
#        schedulerName: 'default-scheduler'
#        priorityClassName: 'high-priority'
#        containerSecurityContext:
#          privileged: true
#        podSecurityContext:
#          fsGroup: 1001
#          supplementalGroups: [1001, 1002, 1003]
        s3:
          bucket: S3-BACKUP-BUCKET-NAME-HERE
          credentialsSecret: cluster1-s3-credentials
          region: us-west-2
#          prefix: ""



