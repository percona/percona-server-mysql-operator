apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
  - script: |-
      set -o pipefail
      set -o errexit
      set -o xtrace

      source ../../functions

      sleep 15
      wait_cluster_consistency "${test_name}" "3"
      mysql_args="-h $(get_mysql_primary_service $(get_cluster_name)) -uroot -proot_password_updated"
      users=($(get_mysql_users "${mysql_args}"))

      # check connection
      args=""
      set +o errexit
      for user in "${users[@]}"; do
      	mysql_args="-h $(get_mysql_primary_service $(get_cluster_name)) -u${user} -p${user}_password_updated"

      	pod=mysql-client
      	case $user in
      		heartbeat | xtrabackup)
      			mysql_args="-h localhost -u${user} -p${user}_password_updated"
      			pod="$(get_cluster_name)-mysql-0"
      			;;
      	esac

      	run_mysql "SELECT 1" "${mysql_args}" "${pod}"

      	args="${args} --from-literal=${user}=$([ $? -eq 0 ] && echo 'success' || echo 'fail')"
      done
      set -o errexit

      kubectl create configmap -n "${NAMESPACE}" 04-check-connections $args
      kubectl get configmap -n "${NAMESPACE}" 04-check-connections -o yaml

      # check replication
      wait_pod "${test_name}-orc-0"
      orc_host=$(get_orc_headless_fqdn $(get_cluster_name) 0)
      cluster=$(run_curl "http://${orc_host}:3000/api/clusters/" | jq -r .[0])

      replicating=$(run_curl "http://${orc_host}:3000/api/cluster/${cluster}/" \
      	| tee \
      	| jq -r '.[] | "\(.ReplicationSQLThreadRuning) \(.ReplicationIOThreadRuning)"' \
      	| grep "true" \
      	| wc -l \
      	| sed 's/ *//')

      kubectl create configmap -n "${NAMESPACE}" 04-check-replication --from-literal=replicating="${replicating}"
    timeout: 200
