apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
  - script: |-
      set -o pipefail
      set -o errexit
      set -o xtrace

      source ../../functions

      sleep 30 # wait for cluster status to change to initializing
      wait_cluster_consistency_async "${test_name}" "3" "3"

      cluster_name=$(get_cluster_name)
      haproxy_svc=$(get_haproxy_svc ${cluster_name})
      mysql_host="-h ${haproxy_svc}"
      mysql_user="-uroot -proot_password_updated"
      users=($(get_mysql_users "${mysql_host}" "${mysql_user}"))

      # check connection
      args=""
      set +o errexit
      for user in "${users[@]}"; do
          mysql_user="-u${user} -p${user}_password_updated"

          pod=mysql-client
          case $user in
              heartbeat | xtrabackup)
                  mysql_host="-h localhost"
                  pod="${cluster_name}-mysql-0"
                  ;;
          esac

          run_mysql "SELECT 1" "${mysql_host}" "${mysql_user}" "${pod}"

          args="${args} --from-literal=${user}=$([ $? -eq 0 ] && echo 'success' || echo 'fail')"
      done
      set -o errexit

      kubectl create configmap -n "${NAMESPACE}" 04-check-connections $args
      kubectl get configmap -n "${NAMESPACE}" 04-check-connections -o yaml

      # check replication
      wait_cluster_consistency_async "${test_name}" "3" "3"
      orc_host=$(get_orc_headless_fqdn ${cluster_name} 0)
      cluster=$(run_curl "http://${orc_host}:3000/api/clusters/" | jq -r .[0])

      replicating=$(run_curl "http://${orc_host}:3000/api/cluster/${cluster}/" \
          | tee \
          | jq -r '.[] | "\(.ReplicationSQLThreadRuning) \(.ReplicationIOThreadRuning)"' \
          | grep "true" \
          | wc -l \
          | $sed 's/ *//')

      kubectl create configmap -n "${NAMESPACE}" 04-check-replication --from-literal=replicating="${replicating}"
    timeout: 300
