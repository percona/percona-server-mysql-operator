apiVersion: kuttl.dev/v1beta1
kind: TestStep
timeout: 10
commands:
  - script: |-
      set -o errexit
      set -o xtrace

      source ../../functions
      init_temp_dir # do this only in the first TestStep

      deploy_operator_with_telemetry() {
        destroy_operator

        local ns="${OPERATOR_NS:-$NAMESPACE}"
        local rbac_file operator_file

        if [[ -n $OPERATOR_NS ]]; then
        create_namespace "$OPERATOR_NS"
        rbac_file="${DEPLOY_DIR}/cw-rbac.yaml"
        operator_file="${DEPLOY_DIR}/cw-operator.yaml"
        else
        rbac_file="${DEPLOY_DIR}/rbac.yaml"
        operator_file="${DEPLOY_DIR}/operator.yaml"
        fi

        kubectl -n "$ns" apply --server-side --force-conflicts -f "${DEPLOY_DIR}/crd.yaml"

        kubectl -n "$ns" apply -f "$rbac_file"

        yq eval \
        "$(printf 'select(documentIndex==1).spec.template.spec.containers[0].image="%s"' "${IMAGE}")" \
        "$operator_file" \
        | yq eval '(select(documentIndex==1).spec.template.spec.containers[] | select(.name=="manager").env[] | select(.name=="DISABLE_TELEMETRY").value) = "false"' \
        | yq eval '(select(documentIndex==1).spec.template.spec.containers[] | select(.name=="manager").env[] | select(.name=="LOG_LEVEL").value) = "DEBUG"' \
        | yq eval 'select(documentIndex==1).spec.template.spec.containers[0].env += [{"name":"TELEMETRY_SCHEDULE","value":"* * * * *"}]' \
        | yq eval 'select(documentIndex==1).spec.template.spec.containers[0].env += [{"name":"TELEMETRY_SERVICE_URL","value":"https://check-dev.percona.com"}]' \
        | kubectl -n "$ns" apply -f -
      }

      deploy_operator_with_telemetry
      deploy_tls_cluster_secrets
      deploy_client
