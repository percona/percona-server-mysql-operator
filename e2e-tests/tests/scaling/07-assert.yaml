apiVersion: kuttl.dev/v1beta1
kind: TestAssert
timeout: 300
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: 07-read-from-replicas
data:
  scaling-mysql-0.scaling-mysql: "100500"
  scaling-mysql-1.scaling-mysql: "100500"
  scaling-mysql-2.scaling-mysql: "100500"
  scaling-mysql-3.scaling-mysql: "100500"
  scaling-mysql-4.scaling-mysql: "100500"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    pv.kubernetes.io/bind-completed: "yes"
    pv.kubernetes.io/bound-by-controller: "yes"
  finalizers:
  - kubernetes.io/pvc-protection
  labels:
    app.kubernetes.io/component: mysql
    app.kubernetes.io/instance: scaling
    app.kubernetes.io/managed-by: percona-server-operator
    app.kubernetes.io/name: percona-server
    app.kubernetes.io/part-of: percona-server
  name: datadir-scaling-mysql-3
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2G
  storageClassName: standard
  volumeMode: Filesystem
status:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 2Gi
  phase: Bound
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    pv.kubernetes.io/bind-completed: "yes"
    pv.kubernetes.io/bound-by-controller: "yes"
  finalizers:
  - kubernetes.io/pvc-protection
  labels:
    app.kubernetes.io/component: mysql
    app.kubernetes.io/instance: scaling
    app.kubernetes.io/managed-by: percona-server-operator
    app.kubernetes.io/name: percona-server
    app.kubernetes.io/part-of: percona-server
  name: datadir-scaling-mysql-4
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2G
  storageClassName: standard
  volumeMode: Filesystem
status:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 2Gi
  phase: Bound
